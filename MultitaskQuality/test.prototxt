name: "ResNet-18"
layer {  
  name: "data"  
  type: "Input"  
  top: "data"  
  input_param { shape: { dim: 1 dim: 3 dim: 224 dim: 224 } }  
}

layer {
    bottom: "data"
    top: "conv1"
    name: "conv1"
    type: "Convolution"
    convolution_param {
        num_output: 96
        kernel_size: 11
        pad: 0
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "bn_conv1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "scale_conv1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "conv1_relu"
    type: "ReLU"
}

layer {
    bottom: "conv1"
    top: "pool1"
    name: "pool1"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "pool1"
    top: "conv2"
    name: "conv2"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 5
        pad: 0
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "conv2"
    top: "conv2"
    name: "bn_conv2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}

layer {
    bottom: "conv2"
    top: "conv2"
    name: "scale_conv2"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2"
    top: "conv2"
    name: "conv2_relu"
    type: "ReLU"
}

layer {
    bottom: "conv2"
    top: "pool2"
    name: "pool2"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}
layer {
    bottom: "pool2"
    top: "conv3"
    name: "conv3"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 5
        pad: 0
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "conv3"
    top: "conv3"
    name: "bn_conv3"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
}

layer {
    bottom: "conv3"
    top: "conv3"
    name: "scale_conv3"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3"
    top: "conv3"
    name: "conv3_relu"
    type: "ReLU"
}

layer {
    bottom: "conv3"
    top: "pool3"
    name: "pool3"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}
layer {
  bottom: "pool3"
  top: "fc4"
  name: "fc4"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  bottom: "fc4"
  top: "fc4"
  name: "relu4"
  type: "ReLU"
}
layer {
  bottom: "fc4"
  top: "fc4"
  name: "drop4"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc4"
  top: "fc5"
  name: "fc5"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  bottom: "fc5"
  top: "fc5"
  name: "relu5"
  type: "ReLU"
}
layer {
  bottom: "fc5"
  top: "fc5"
  name: "drop5"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "g_prob"
  type: "Softmax"
  bottom: "fc6"
  top: "g_prob" 
}